// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/String.jack

/**
 * Represents a String object. Implements the String type.
 */
class String {
    field Array str;
    field int maxLen, len; 

    /** Constructs a new empty String with a maximum length of maxLength. 
    for reference: http://nand2tetris-questions-and-answers-forum.32033.n3.nabble.com/String-class-issues-td4027591.html */
    constructor String new(int maxLength) {
        if(maxLength > 0){
            let str = Array.new(maxLength);
        }
        
        let len = 0;
        let maxLen = maxLength;

        return this;
    }

    /** De-allocates the string and frees its space. */
    method void dispose() {
        if(~(str = null)){
            do str.dispose();
        }

        do Memory.deAlloc(this);

        return;
    }

    /** Returns the current length of this String. */
    method int length() {
        return len;
    }

    /** Returns the character at location j. */
    method char charAt(int j) {
        var char retVal;

        if(j < len + 1){
            let retVal = str[j];
        }else{
            do Sys.error(15);
        }
        
        return retVal;
    }

    /** Sets the j'th character of this string to be c. */
    method void setCharAt(int j, char c) {
        if(j < len + 1){
            let str[j] = c;
        }else{
            do Sys.error(17);
        }

        return;
    }

    /** Appends the character c to the end of this String.
     *  Returns this string as the return value. */
    method String appendChar(char c) {
        if(len < maxLen + 1){
            let len = len + 1;
            let str[len] = c;
        }else{
            do Sys.error(17);
        }

        return this;
    }

    /** Erases the last character from this String. */
    method void eraseLastChar() {
        if(len > 0){
            let len = len - 1;
        }else{
            do Sys.error(17);
        }

        return;
    }

    /** Returns the integer value of this String until the first non
     *  numeric character. look at page 252/253 chapter 12.1.2, fig 12.4/12.5 for explanation.*/
    method int intValue() {
        var int v;
        var int i;
        while(i < len){
            let v = v * 10 + str[i];
        }

        return v;
    }

    /** Sets this String to hold a representation of the given number. http://nand2tetris-questions-and-answers-forum.32033.n3.nabble.com/String-representation-of-numbers-td4029096.html#a4029097*/
    method void setInt(int number) {
        var int lastDigit;
        let len = 0; //clearing string buffer;

        while(i , len)
        if(number < 10){
            this.appendChar(number);
        }else{
            
        }
        
        let lastDigit = number;

        return;
    }

    /** Returns the new line character. */
    function char newLine() {
        return 128;

    }

    /** Returns the backspace character. */
    function char backSpace() {
        return 129;
    }

    /** Returns the double quote (") character. */
    function char doubleQuote() {
        return 34;
    }

}
